<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 载入redis.properties,这里要特别注意，如果有多个properties文件，必须用逗号分开，不能写成两个 <context:property-placeholder/> -->
    <context:property-placeholder location="classpath:redis.properties" />

    <!-- 配置JedisPoolConfig连接池-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${spring.redis.maxTotal}"></property>
        <property name="maxIdle" value="${spring.redis.pool.maxIdle}"></property>
        <property name="maxWaitMillis" value="${spring.redis.pool.maxWaitMillis}"></property>
        <property name="testOnBorrow" value="true"/>
    </bean>
    <!-- 配置jedis连接工厂 -->
    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"></property>
        <property name="hostName" value="${spring.redis.host}"></property>
        <property name="port" value="${spring.redis.port}"></property>
        <property name="password" value="${spring.redis.password}"></property>
        <!--<property name="database" value="${spring.redis.database}"></property>-->
        <!--<property name="timeout" value="${spring.redis.timeout}"></property>-->
    </bean>

    <!-- 配置RedisTemplate -->
    <bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"></property>
        <property name="KeySerializer" ref="stringRedisSerializer"></property>
        <property name="valueSerializer" ref="stringRedisSerializer"></property>
        <property name="defaultSerializer" ref="stringRedisSerializer"></property>
    </bean>
    <!-- 配置messageListener-->
    <bean id="redisMsgListener" class="com.redis.Listener.redisMessageListener">
        <property name="redisTemplate" ref="redisTemplate"></property>
    </bean>
    <!--配置监听容器-->
    <bean name="topicContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer" destroy-method="destroy">
        <!--定义连接工厂-->
        <property name="connectionFactory" ref="connectionFactory"></property>
        <!--定义连接池，这里只要线程池生存，才能继续监听-->
        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
                <property name="poolSize" value="3"></property>
            </bean>
        </property>
        <!--消息监听 Map-->
        <property name="messageListeners">
            <map>
                <!--配置监听者 -->
                <entry key-ref="redisMsgListener">
                    <!--监听类-->
                    <bean class="org.springframework.data.redis.listener.ChannelTopic">
                        <constructor-arg value="chat"></constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    <!--
　　　　定义缓存管理器redisCacheManager。
　　　　注意：cache-manager默认值是cacheManager,你的缓存管理器id要是命名是cacheManager，这里可以省略
    -->
    <!--&lt;!&ndash;1.使用注解驱动&ndash;&gt;-->
    <!--<cache:annotation-driven cache-manager="redisCacheManager"></cache:annotation-driven>-->

    <!--&lt;!&ndash;2.定义缓存管理器&ndash;&gt;-->
    <!--<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">-->
        <!--&lt;!&ndash;通过构造方法注入redisTemplate&ndash;&gt;-->
        <!--<constructor-arg index="0" ref="redisTemplate"></constructor-arg>-->
        <!--&lt;!&ndash;定义超时时间，单位秒&ndash;&gt;-->
        <!--<property name="defaultExpiration" value="5000"></property>-->
        <!--&lt;!&ndash;设置缓存器名称  &ndash;&gt;-->
        <!--<property name="cacheNames">-->
            <!--<list>-->
                <!--<value>redisCacheManager</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
</beans>